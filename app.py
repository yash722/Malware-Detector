from flask import Flask, render_template, request
from werkzeug.utils import secure_filename
from ember.features import PEFeatureExtractor
import tensorflow as tf
import numpy as np
import sys
import os
import ember

app = Flask(__name__)

app.config["UPLOAD_FOLDER"] = "C:\\Users\\anike\\OneDrive - vit.ac.in\\Documents\\GitHub\\Malware-Detector\\Static\\"

@app.route('/')
def upload_file():
    return render_template('index.html')


@app.route('/display', methods = ['GET', 'POST'])
def test_pefile():
    if request.method == 'POST':
        f = request.files['file']
        filename = secure_filename(f.filename)
        f.save(app.config['UPLOAD_FOLDER'] + filename)
    pefile = app.config['UPLOAD_FOLDER'] + filename
    
    tf.compat.v1.disable_eager_execution()
    with open("mms_scaler","rb") as f:
        import pickle
        mms = pickle.load(f)
        f.close()
    sample_data = open(pefile, "rb").read()
    extractor = ember.PEFeatureExtractor(2)
    sample_data = np.array(extractor.feature_vector(sample_data), dtype=np.float32)
    sample_data = mms.transform([sample_data])
    sample_data = np.reshape(sample_data,(-1,1,2381))
    model = tf.keras.models.load_model('model.h5')
    pred = (model.predict(sample_data) > 0.5).astype("int32")
    
    out = pred[0][0][0]
    if(out==0):
        return render_template('malicius.html', content=out) 
    else:
        return render_template('benign.html', content=out)

if __name__ == '__main__':
    app.run(host="0.0.0.0", port=5000, debug = True)